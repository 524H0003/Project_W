# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @cacheControl(inheritMaxAge: Boolean, maxAge: Int, scope: CacheControlScope) on FIELD_DEFINITION | INTERFACE | OBJECT | QUERY | UNION

enum CacheControlScope {
  PRIVATE
  PUBLIC
}

"""DateTime custom scalar type"""
scalar DateTime

type Enterprise {
  description: String!
  id: String!
  industry: String!
}

type Event {
  additionalFields: JSON!
  applicationDeadline: DateTime!
  description: String!
  endDate: DateTime!
  id: String!
  location: String!
  maxParticipants: Float!
  positionsAvailable: Float!
  requiredSkills: String!
  startDate: DateTime!
  status: event_status!
  title: String!
  type: event_type!
}

input EventAssign {
  additionalFields: JSON = ""
  applicationDeadline: DateTime
  description: String = ""
  endDate: DateTime!
  location: String!
  maxParticipants: Float!
  positionsAvailable: Float!
  requiredSkills: String = ""
  startDate: DateTime!
  status: String = "draft"
  title: String!
  type: String = "internship"
}

type EventPage {
  currentPage: Float!
  hasNext: Boolean!
  hasPrevious: Boolean!
  items: [Event!]!
  pageSize: Float!
  total: Float!
  totalPages: Float!
}

type EventParticipator {
  additionalData: JSON!
  id: String!
  interviewAt: DateTime
  interviewNote: String!
  isAttended: Boolean!
  registeredAt: DateTime!
  role: String!
  status: String!
}

input EventParticipatorAssign {
  eventId: String!
  userId: String!
}

input EventParticipatorUpdate {
  additionalData: JSON = ""
  id: String!
  interviewAt: DateTime
  interviewNote: String
  isAttended: Boolean
  registeredAt: DateTime
  role: String
  status: String
}

type EventTag {
  id: String!
  name: String!
  toEvents: [Event!]
}

input EventTagAssign {
  name: String!
}

input EventTagAttach {
  eventId: String!
  name: String!
}

type EventTagPage {
  currentPage: Float!
  hasNext: Boolean!
  hasPrevious: Boolean!
  items: [EventTag!]!
  pageSize: Float!
  total: Float!
  totalPages: Float!
}

input EventUpdate {
  additionalFields: JSON
  applicationDeadline: DateTime
  description: String
  endDate: DateTime
  id: String!
  location: String
  maxParticipants: Float
  positionsAvailable: Float
  requiredSkills: String
  startDate: DateTime
  status: String
  title: String
  type: String
}

type File {
  id: String!
  path: String!
  title: String!
  type: FileType!
  uploadedAt: DateTime!
}

enum FileType {
  certificate
  other
  report
  resume
}

input FindEvent {
  applicationDeadline: DateTime
  description: String
  endDate: DateTime
  id: String
  location: String
  maxParticipants: Float
  positionsAvailable: Float
  requiredSkills: String
  startDate: DateTime
  status: String
  title: String
  type: String
}

input FindStudent {
  avatarPath: String
  email: String
  enrollmentYear: Float
  graduationYear: Float
  id: String
  isActive: Boolean
  lastLogin: DateTime
  major: String
  name: String
  role: String
  skills: String
}

input FindTag {
  id: String
  name: String
}

input FindUser {
  avatarPath: String
  email: String
  id: String
  isActive: Boolean
  lastLogin: DateTime
  name: String
  role: String
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Mutation {
  assignEvent(input: EventAssign!): Event!
  assignEventTag(input: EventTagAssign!): EventTag!
  assignNotification(input: NotificationAssign!): Notification!
  assignParticipator(input: EventParticipatorAssign!): EventParticipator!
  assignReciever(input: RecieverAssign!): Reciever!
  assignRecieverMany(input: RecieverAssignMany!): [Reciever!]!
  attachEventTag(input: EventTagAttach!): EventTag!
  readNotification(input: ReadNotification!): Reciever!
  readNotificationMany(input: ReadNotificationMany!): [Reciever!]!
  updateEvent(input: EventUpdate!): Event!
  updateNotification(input: NotificationUpdate!): Notification!
  updateParticipator(input: EventParticipatorUpdate!): EventParticipator!
  uploadFile(file: Upload!): File!
}

type Notification {
  content: String!
  id: String!
  title: String!
  type: notification_type!
}

input NotificationAssign {
  content: String!
  title: String!
  type: String!
}

input NotificationUpdate {
  content: String
  id: String!
  title: String
  type: String
}

input Paging {
  index: Float!
  take: Float!
}

type Query {
  getCurrent: User!
  getEvents(input: FindEvent!, page: Paging): EventPage!
  getNotifications(isRead: Boolean, page: Paging): RecieverPage!
  getStudents(input: FindStudent!, page: Paging): StudentPage!
  getTags(input: FindTag!, page: Paging): EventTagPage!
  getUsers(input: FindUser!, page: Paging): UserPage!
}

input ReadNotification {
  recieverId: String!
}

input ReadNotificationMany {
  recieversId: [String!]!
}

type Reciever {
  id: String!
  isRead: Boolean!
  readAt: DateTime
}

input RecieverAssign {
  notificationId: String!
  userId: String!
}

input RecieverAssignMany {
  notificationId: String!
  usersId: [String!]!
}

type RecieverPage {
  currentPage: Float!
  hasNext: Boolean!
  hasPrevious: Boolean!
  items: [Reciever!]!
  pageSize: Float!
  total: Float!
  totalPages: Float!
}

type Student {
  currentEnterprise: Enterprise
  enrollmentYear: Float!
  graduationYear: Float
  id: String!
  major: String!
  skills: String!
  user: User!
}

type StudentPage {
  currentPage: Float!
  hasNext: Boolean!
  hasPrevious: Boolean!
  items: [Student!]!
  pageSize: Float!
  total: Float!
  totalPages: Float!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  avatarPath: String!
  email: String!
  id: String!
  isActive: Boolean!
  lastLogin: DateTime!
  name: String!
  role: UserRole!
}

type UserPage {
  currentPage: Float!
  hasNext: Boolean!
  hasPrevious: Boolean!
  items: [User!]!
  pageSize: Float!
  total: Float!
  totalPages: Float!
}

enum UserRole {
  admin
  enterprise
  faculty
  student
  undefined
}

enum event_status {
  Cancelled
  Completed
  Draft
  Published
}

enum event_type {
  Internship
  Job_fair
  Seminar
  Workshop
}

enum notification_type {
  event
  participation
  progress
  system
}