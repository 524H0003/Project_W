name: Test Format Lint

on:
  pull_request:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      project: ${{ steps.filter.outputs.project }}
    steps:
      - uses: actions/checkout@v4

      - id: 'getBranch'
        run: |
          if [[ $GITHUB_REF_NAME == 'master' ]]; then
              echo "test=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
          else
              echo "test='HEAD'" >> "$GITHUB_OUTPUT"
          fi

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          base: ${{ steps.getBranch.outputs.test }}
          filters: |
            project:
              - '**.ts'
              - '**.json'

      - uses: actions/cache@v4
        with:
          path: |
            '**/node_modules'
            'src/*.ts'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm run build

  Test_service:
    needs: changes
    if: ${{ needs.changes.outputs.project == 'true' }}

    name: 'Test Services'

    runs-on: ubuntu-latest

    timeout-minutes: 10

    permissions:
      contents: write
      actions: write
      checks: write
      issues: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - uses: ikalnytskyi/action-setup-postgres@v6

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - uses: actions/cache/restore@v4
        with:
          path: |
            '**/node_modules'
            'src/*.ts'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm run test:service

      - uses: actions/upload-artifact@v4
        with:
          name: service
          path: |
            ./reports/service.xml
            ./coverage/service.txt

  Test_resolver:
    needs: changes
    if: ${{ needs.changes.outputs.project == 'true' }}

    name: 'Test resolvers'

    runs-on: ubuntu-latest

    timeout-minutes: 10

    permissions:
      contents: write
      actions: write
      checks: write
      issues: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - uses: ikalnytskyi/action-setup-postgres@v6

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - uses: actions/cache/restore@v4
        with:
          path: |
            '**/node_modules'
            'src/*.ts'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm run test:resolver

      - uses: actions/upload-artifact@v4
        with:
          name: resolver
          path: |
            ./reports/resolver.xml
            ./coverage/resolver.txt

  Test_controller:
    needs: changes
    if: ${{ needs.changes.outputs.project == 'true' }}

    name: 'Test controllers'

    runs-on: ubuntu-latest

    timeout-minutes: 10

    permissions:
      contents: write
      actions: write
      checks: write
      issues: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - uses: ikalnytskyi/action-setup-postgres@v6

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - uses: actions/cache/restore@v4
        with:
          path: |
            '**/node_modules'
            'src/*.ts'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm run test:controller

      - uses: actions/upload-artifact@v4
        with:
          name: controller
          path: |
            ./reports/controller.xml
            ./coverage/controller.txt

  FormatAndLint:
    needs:
      - Test_service
      - Test_resolver
      - Test_controller

    name: 'Format & Lint'

    runs-on: ubuntu-latest

    timeout-minutes: 10

    permissions:
      contents: write
      actions: write
      checks: write
      issues: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - uses: actions/cache/restore@v4
        with:
          path: |
            '**/node_modules'
            'src/*.ts'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm run format && npm run lint

      - uses: stefanzweifel/git-auto-commit-action@v5
        id: auto-commit-action
        with:
          skip_dirty_check: false

      - uses: actions/download-artifact@v4
        if: steps.auto-commit-action.outputs.changes_detected == 'false'

      - name: Controller coverage
        if: steps.auto-commit-action.outputs.changes_detected == 'false'
        uses: MishaKav/jest-coverage-comment@main
        with:
          title: Controller coverage
          coverage-title: Coverage result
          coverage-path: ./coverage/controller.txt
          create-new-comment: true
          junitxml-path: ./reports/controller.xml

      - name: Resolver coverage
        if: steps.auto-commit-action.outputs.changes_detected == 'false'
        uses: MishaKav/jest-coverage-comment@main
        with:
          title: Resolver coverage
          coverage-title: Coverage result
          coverage-path: ./coverage/resolver.txt
          create-new-comment: true
          junitxml-path: ./reports/resolver.xml

      - name: Service coverage
        if: steps.auto-commit-action.outputs.changes_detected == 'false'
        uses: MishaKav/jest-coverage-comment@main
        with:
          title: Service coverage
          coverage-title: Coverage result
          coverage-path: ./coverage/service.txt
          create-new-comment: true
          junitxml-path: ./reports/service.xml
