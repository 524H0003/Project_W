name: Test Format Lint

on:
  pull_request:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      project: ${{ steps.filter.outputs.project }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          project:
            - '**.ts'
            - '**.json'

  Test_Unit:
    needs: changes
    if: ${{ needs.changes.outputs.project == 'true' }}

    name: 'Test Unit'

    runs-on: ubuntu-latest

    timeout-minutes: 10

    permissions:
      contents: write
      actions: write
      checks: write
      issues: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - uses: ikalnytskyi/action-setup-postgres@v6

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm run test:unit

      - name: Jest Coverage Comment
        uses: MishaKav/jest-coverage-comment@main
        id: coverageComment
        with:
          title: Test report
          coverage-title: Coverage result
          coverage-path: ./coverage/coverage.txt
          create-new-comment: true
          junitxml-path: ./reports/junit.xml

  Test_E2E:
    needs: changes
    if: ${{ needs.changes.outputs.project == 'true' }}

    name: 'Test e2e'

    runs-on: ubuntu-latest

    timeout-minutes: 10

    permissions:
      contents: write
      actions: write
      checks: write
      issues: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - uses: ikalnytskyi/action-setup-postgres@v6

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm run test:e2e

      - name: Jest Coverage Comment (e2e)
        uses: MishaKav/jest-coverage-comment@main
        id: coverageCommentE2E
        with:
          title: Test report (end 2 end)
          coverage-title: Coverage result
          coverage-path: ./coverage/coverage_e2e.txt
          create-new-comment: true
          junitxml-path: ./reports_e2e/junit.xml

  Format&Lint:
    needs:
      - Test_E2E
      - Test_Unit
    if: ${{ needs.changes.outputs.project == 'true' }}

    name: 'Format & Lint'

    runs-on: ubuntu-latest

    timeout-minutes: 10

    permissions:
      contents: write
      actions: write
      checks: write
      issues: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - uses: ikalnytskyi/action-setup-postgres@v6

      - uses: actions/setup-node@v4
        with:
          node-version: 22

      - uses: actions/cache@v4
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm run format && npm run lint

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          skip_dirty_check: false
