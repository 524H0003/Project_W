name: Test Format Lint

on:
  pull_request:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  ACCESS_SECRET: 'ACCESS_SECRET'
  REFRESH_SECRET: 'REFRESH_SECRET'
  SERVER_SECRET: 'SERVER_SECRET'

jobs:
  changes:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    outputs:
      project: ${{ steps.filter.outputs.project }}

    steps:
      - uses: actions/checkout@v4

      - id: 'getBranch'
        run: |
          if [[ $GITHUB_REF_NAME == 'master' ]]; then
              echo "test=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
          else
              echo "test='HEAD'" >> "$GITHUB_OUTPUT"
          fi

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: 'pnpm'

      - run: pnpm i && npm run format && npm run lint

      - uses: stefanzweifel/git-auto-commit-action@v5
        id: auto-commit-action
        with:
          skip_dirty_check: false

      - uses: dorny/paths-filter@v3
        if: steps.auto-commit-action.outputs.changes_detected == 'false'
        id: filter
        with:
          base: ${{ steps.getBranch.outputs.test }}
          filters: |
            project:
              - 'src/**'
              - 'mail/**'
              - 'page/**'
              - 'pnpm-lock.yaml'

  Test_service:
    needs: changes
    if: ${{ needs.changes.outputs.project == 'true' }}

    name: 'Test Services'

    runs-on: ubuntu-latest

    timeout-minutes: 3

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - uses: ikalnytskyi/action-setup-postgres@v6

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: 'pnpm'

      - run: npm run prebuild:dev && npm run test:service

      - uses: actions/upload-artifact@v4
        with:
          name: service
          path: |
            ./reports/service.xml
            ./coverage/service.txt

  Test_requester:
    needs: changes
    if: ${{ needs.changes.outputs.project == 'true' }}

    name: 'Test requesters'

    runs-on: ubuntu-latest

    timeout-minutes: 3

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - uses: ikalnytskyi/action-setup-postgres@v6

      - uses: supercharge/redis-github-action@1.8.0
        with:
          redis-password: ''

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: 'pnpm'

      - run: npm run prebuild:dev && npm run test:requesters

      - uses: actions/upload-artifact@v4
        with:
          name: requesters
          path: |
            ./reports/requesters.xml
            ./coverage/requesters.txt

  Test_etc:
    needs: changes
    if: ${{ needs.changes.outputs.project == 'true' }}

    name: 'Test the rest'

    runs-on: ubuntu-latest

    timeout-minutes: 3

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - uses: ikalnytskyi/action-setup-postgres@v6

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: 'pnpm'

      - run: npm run prebuild:dev && npm run test:etc

      - uses: actions/upload-artifact@v4
        with:
          name: etc
          path: |
            ./reports/etc.xml
            ./coverage/etc.txt

  Test_web:
    needs: changes
    if: ${{ needs.changes.outputs.project == 'true' }}

    name: 'Test web'

    runs-on: ubuntu-latest

    timeout-minutes: 3

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - uses: supercharge/redis-github-action@1.8.0
        with:
          redis-password: ''

      - uses: ikalnytskyi/action-setup-postgres@v6

      - uses: pnpm/action-setup@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: 'pnpm'

      - run: rm -fr public/*

      - run: npm run start:ci

      - name: Upload Images
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-images
          path: ./cypress/screenshots

  FormatAndLint:
    needs:
      - Test_service
      - Test_requester
      - Test_web
      - Test_etc

    name: 'Format & Lint'

    runs-on: ubuntu-latest

    timeout-minutes: 1

    permissions:
      contents: read
      pull-requests: write

    if: ${{ needs.changes.outputs.project == 'true' }}

    steps:
      - run: exit 1
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'skipped') || contains(needs.*.result, 'cancelled')

      - name: Delete GitHub Actions Comments
        uses: izhangzhihao/delete-comment@master
        with:
          github_token: ${{ github.token }}
          delete_user_name: 'github-actions[bot]'
          issue_number: ${{ github.event.number }}

      - uses: actions/download-artifact@v4

      - name: Requesters
        uses: MishaKav/jest-coverage-comment@main
        with:
          title: Requesters test result
          coverage-path: ./requesters/coverage/requesters.txt
          create-new-comment: true
          junitxml-path: ./requesters/reports/requesters.xml

      - name: Service
        uses: MishaKav/jest-coverage-comment@main
        with:
          title: Service test result
          coverage-path: ./service/coverage/service.txt
          create-new-comment: true
          junitxml-path: ./service/reports/service.xml

      - name: Et cetera
        uses: MishaKav/jest-coverage-comment@main
        with:
          title: Et cetera test result
          coverage-path: ./etc/coverage/etc.txt
          create-new-comment: true
          junitxml-path: ./etc/reports/etc.xml
